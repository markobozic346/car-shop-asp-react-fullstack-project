// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using servis_automobila.Contexts;

#nullable disable

namespace servis_automobila.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240625104203_SeedData")]
    partial class SeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("servis_automobila.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarBodyId")
                        .HasColumnType("int");

                    b.Property<string>("Make")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarBodyId");

                    b.HasIndex("UserId");

                    b.ToTable("Cars", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarBodyId = 1,
                            Make = "Toyota",
                            Model = "Camry",
                            Price = 24000m,
                            UserId = 2,
                            Year = 2020
                        },
                        new
                        {
                            Id = 2,
                            CarBodyId = 2,
                            Make = "Honda",
                            Model = "CR-V",
                            Price = 30000m,
                            UserId = 2,
                            Year = 2021
                        },
                        new
                        {
                            Id = 3,
                            CarBodyId = 1,
                            Make = "Ford",
                            Model = "Fusion",
                            Price = 22000m,
                            UserId = 3,
                            Year = 2019
                        },
                        new
                        {
                            Id = 4,
                            CarBodyId = 1,
                            Make = "Chevrolet",
                            Model = "Malibu",
                            Price = 20000m,
                            UserId = 4,
                            Year = 2018
                        },
                        new
                        {
                            Id = 5,
                            CarBodyId = 1,
                            Make = "Nissan",
                            Model = "Altima",
                            Price = 23000m,
                            UserId = 5,
                            Year = 2020
                        },
                        new
                        {
                            Id = 6,
                            CarBodyId = 2,
                            Make = "Toyota",
                            Model = "Rav4",
                            Price = 31000m,
                            UserId = 6,
                            Year = 2021
                        },
                        new
                        {
                            Id = 7,
                            CarBodyId = 1,
                            Make = "Honda",
                            Model = "Accord",
                            Price = 28000m,
                            UserId = 7,
                            Year = 2022
                        },
                        new
                        {
                            Id = 8,
                            CarBodyId = 1,
                            Make = "Hyundai",
                            Model = "Elantra",
                            Price = 21000m,
                            UserId = 8,
                            Year = 2020
                        });
                });

            modelBuilder.Entity("servis_automobila.Models.CarBody", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("CarBodies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Type = "Sedan"
                        },
                        new
                        {
                            Id = 2,
                            Type = "SUV"
                        },
                        new
                        {
                            Id = 3,
                            Type = "Hatchback"
                        },
                        new
                        {
                            Id = 4,
                            Type = "Convertible"
                        },
                        new
                        {
                            Id = 5,
                            Type = "Coupe"
                        },
                        new
                        {
                            Id = 6,
                            Type = "Minivan"
                        },
                        new
                        {
                            Id = 7,
                            Type = "Truck"
                        });
                });

            modelBuilder.Entity("servis_automobila.Models.SavedCar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CarId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("UserId");

                    b.ToTable("SavedCars", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CarId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 2,
                            CarId = 2,
                            UserId = 3
                        },
                        new
                        {
                            Id = 3,
                            CarId = 3,
                            UserId = 4
                        },
                        new
                        {
                            Id = 4,
                            CarId = 4,
                            UserId = 5
                        },
                        new
                        {
                            Id = 5,
                            CarId = 5,
                            UserId = 6
                        },
                        new
                        {
                            Id = 6,
                            CarId = 6,
                            UserId = 7
                        },
                        new
                        {
                            Id = 7,
                            CarId = 7,
                            UserId = 8
                        });
                });

            modelBuilder.Entity("servis_automobila.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "1UcUVC5NV3Euto38TfEbaRU2kPScg1KAw73gGDS24T6ARQpadCDpUiuq+316WhEnG9Syup3g0KGRELOPrO5RHA==",
                            PasswordSalt = "ALYtzOOPem91efI4FbuANpjLObUz8o8LqWhVoQoTusO52Az2kpjzcUNI6kWOb4Lz8tDYyP+/HAhCQWToDb+VBcZiVG/8HgbADEcZWsyLuu590OqLXOppdfVJEfDpDvuSqDdUlq1aBQWho0jWbq+3dDVfX2u8S8tx/la8eTsYjxw=",
                            Role = "admin",
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = "stMKNq4siUCe7v9fALrcvKB2RY8JWuMbzErkXb67kCjS7KZk2h7lJvrcyhBPaDB1qBqoHT5PxqbJu2mRqi1+oQ==",
                            PasswordSalt = "WioXQvTn/82pBmi4rfiFgRBvNJ7M1bNoM8u29GGwKqYONKNK0TCr2MN6VxN+jpzGsGfYGr5dKtCrN2NSJ3Qzc45rj+AiRcymTUkefv4iwX9n0aPZyc9I3+dNH2RDMItKODwo4DWUid86Kp1bMO37pZp5XsNRCn0GMCiKaWzyovU=",
                            Role = "user",
                            Username = "user1"
                        },
                        new
                        {
                            Id = 3,
                            PasswordHash = "ivg6aegMVKCAisVY42zFDxv29iHZQfC3F5+DI69h5uZT3aSzFH4H9h+EkAp76BxAb9dU7xUh6hKnsD/usgWJDg==",
                            PasswordSalt = "SDurcqhKFPJnLMapQ/cVl9kbkhiTwkNOQ1p39Zb6d0w5rXXoikKCDRxgmuwZAjAeEfAC1cNvvw8WWH25CXTaxRCojQm6IH0zvib8gvaw3WN/wMJ7+YB1MRXsh6ICaVsUHKIDgPUEwDgrL/jf85xLn3bNhH0i85ja6Kvv1JiHtSQ=",
                            Role = "user",
                            Username = "user2"
                        },
                        new
                        {
                            Id = 4,
                            PasswordHash = "HKsweH16LOZWmcgDO7EBFZ74aEBGhLHuGOFPeRzNo3D9Bq41g1SRXaixYuMms+YDqAZovtoU8jvJxVLbHQaFAA==",
                            PasswordSalt = "Kbsa4ZPnvRNweAEW7iGPSjtDD54oToLLucO8uWRlxHq6gwgGv0URR7IiBG7VJE5c/XmWVMqBTo5C9u9gmOZkZ2q2gDaEblkgZ9Mr/cB0Xe3MBSlYGrWrmw6ROFkN7RmxVoJV9elwnAvd9YObXATrLn+LLMD2HYW15GNCoiBVyK8=",
                            Role = "user",
                            Username = "user3"
                        },
                        new
                        {
                            Id = 5,
                            PasswordHash = "+zTxF3hecYcVAoqhB+nxhnIwMNlH96EOrJDsnr6KB90kJiuAUi6HoyFmIgjaDF0rKrWFedTNBahXLtZAy3bQ+Q==",
                            PasswordSalt = "BkEhmjDV16UbkKr6FXkNdK7jrmIyZnvhmqbKT8T5TsdcJmCbHp+8UbJD/k20r0K5g8XT9kcJ1zIvLQ7/PuGpr4t0lyROmdL1uJXdFDMbmnw/s2l4RI1rEJ/46wMKoUJIMGjG1HM/NpvhvniHJestdrqsmpzQmzONaF6+3de0J6c=",
                            Role = "user",
                            Username = "user4"
                        },
                        new
                        {
                            Id = 6,
                            PasswordHash = "f+/LERpS/2UeSUaIMNZttifNEPgh541Cs6K/2nZ/sAFuoQutUtUq2wkw1DOSM6jCzG7Irp3Z/a63COmG87mRbQ==",
                            PasswordSalt = "FomNjziNeURCUgnflzdbTZfhbWp0EfwU0NHYHUIdEnuOG4yvwoiigAZYYPbV7V9o+Uzy+pqUzv/8xA7fnfqbFyLxCf8bCX2Pjfwpo30Pi9LFqKGIbsDjzXk2fjFoyRyFN4HLjnyK71Q5oq6BnT3wr7f1gukGP416gt8g8qlGJLE=",
                            Role = "user",
                            Username = "user5"
                        },
                        new
                        {
                            Id = 7,
                            PasswordHash = "W1SWVMig9ULVQe/GLNV+SYeu5X2q1tqxxSCl7epIwyUqkc3u1QLaNripRsszA1k/WIXSVfCn3fTRCcdx9yGhKg==",
                            PasswordSalt = "C1xKFaFrRs8vIbj2K9EfdMpbW4+5OBYkkPO8wo7eG/JS7uAQjcO2iKHWzMALtwuTPQu4J6JFXGMip4h1aP6Jd6tF4KxrwnXY6ZK2yL1apIGedCPhaXVA6rjHyapLwf8iimtMQEUxZPLubZxFBPt+XOGI8GEjU8BTas9yU0xmlHk=",
                            Role = "user",
                            Username = "user6"
                        },
                        new
                        {
                            Id = 8,
                            PasswordHash = "3Zi0boFzYUjlOrKFWy9lo6dwClgYLwCzS2L62LVB9pJG4RU58itURxVBg6IB//i93I8DLkni3QY7AcjOgiMNqA==",
                            PasswordSalt = "dZB28uAiyX4in3/l8ilMyJm8cqfP/HKd4kapfQ3s4BPHbu2cQ2NKmLk45GH3Ifi0Ci3j1PYIdAqkIXNK+EQX69CcSNFtdRNDJphFsNPCnV+JJg8XC0kZbVmZb72AuYc3E+NhVw4VdZcs/7Ht6k1CumP/GDpSvmkH+fyseeIV3J0=",
                            Role = "user",
                            Username = "user7"
                        });
                });

            modelBuilder.Entity("servis_automobila.Models.Car", b =>
                {
                    b.HasOne("servis_automobila.Models.CarBody", "CarBody")
                        .WithMany()
                        .HasForeignKey("CarBodyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("servis_automobila.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CarBody");

                    b.Navigation("User");
                });

            modelBuilder.Entity("servis_automobila.Models.SavedCar", b =>
                {
                    b.HasOne("servis_automobila.Models.Car", "Car")
                        .WithMany("SavedByUsers")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("servis_automobila.Models.User", "User")
                        .WithMany("SavedCars")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("User");
                });

            modelBuilder.Entity("servis_automobila.Models.Car", b =>
                {
                    b.Navigation("SavedByUsers");
                });

            modelBuilder.Entity("servis_automobila.Models.User", b =>
                {
                    b.Navigation("SavedCars");
                });
#pragma warning restore 612, 618
        }
    }
}
